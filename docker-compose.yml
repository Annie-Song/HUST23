version: '3'

services:
  # 后端API服务
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: adplatform-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/adplatform
    depends_on:
      - mongo
    networks:
      - app-network

  # MongoDB数据库
  mongo:
    image: mongo:latest
    container_name: adplatform-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network

  # Mongo Express (MongoDB管理界面)
  mongo-express:
    image: mongo-express:latest
    container_name: adplatform-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - mongo
    networks:
      - app-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: adplatform-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - api
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data: 